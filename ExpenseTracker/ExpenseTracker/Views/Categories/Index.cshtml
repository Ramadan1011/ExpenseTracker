@model IEnumerable<ExpenseTracker.Application.ViewModels.Category.CategoryViewModel>

@{
    ViewData["PageTitle"] = "Categories";
}

<div class="row">
    <div class="col-md-7">
        <form method="get" class="mb">
            <div class="form-container d-flex justify-content-between">
                <div class="d-flex gap-3">
                    <ejs-textbox id="search-box"
                                 name="search"
                                 placeholder="Search categories"
                                 floatLabelType="Never"
                                 width="300px"
                                 input="onSearchChange"
                                 value="@ViewBag.Search">
                    </ejs-textbox>
                </div>
                <a class="btn btn-success" data-bs-toggle="modal" data-bs-target="#createCategoryModal"> + Category</a>
            </div>
        </form>
    </div>
</div>

<div class="row mt-4">
    <div class="col-md-7">
        <ejs-grid id="categories" dataSource="@Model" allowSorting="true" allowPaging="true">
            <e-grid-pagesettings pageSize="8"></e-grid-pagesettings>
            <e-grid-columns>
                <e-grid-column headerText="Id" field="Id" width="50px" template="#navigationColumnTemplate"></e-grid-column>
                <e-grid-column headerText="Category" field="Name" width="150px"></e-grid-column>
                <e-grid-column headerText="Type" template="#typeColumnTemplate" width="150px"></e-grid-column>
                <e-grid-column headerText="Actions" template="#actionColumnTemplate" width="100px"></e-grid-column>
            </e-grid-columns>
        </ejs-grid>
    </div>
    <div class="col-md-5">
        <div class="widget h-100 d-flex justify-content-center align-items-center">
            <i class="fa-solid fa-shapes fa-2xl"></i>
        </div>
    </div>
</div>

@if (Model != null && Model.Any())
{
    @await Html.PartialAsync("Modals/Edit", Model.FirstOrDefault())
}

@await Html.PartialAsync("Modals/Delete")
@await Html.PartialAsync("Modals/Create")

<script id="typeColumnTemplate" type="text/x-template">
    ${if(Type == 0)}
        <span class="badge bg-success">Income</span>
    ${else}
        <span class="badge bg-danger">Expense</span>
    ${/if}
</script>

<script id="actionColumnTemplate" type="text/x-template">
    <div class="d-flex flex-row justify-content-start">
                <button class="btn btn-sm no-a-decoration" onclick="openUpdateModal(${Id})">
            <i class="fa-solid fa-pen fa-lg"></i>
        </button>

        <button class="btn btn-sm no-a-decoration" onclick="openDeleteModal(${Id})">
            <i class="fa-solid fa-trash-can fa-lg text-danger"></i>
        </button>
    </div>
</script>

<script id="navigationColumnTemplate" type="text/x-template">
    <div>
        <a rel="nofollow" href="/categories/details/${Id}">${Id}</a>
    </div>
</script>

<script>
    function onSearchChange(args) {
        if (!args) {
            return;
        }

        const search = args.value;

        $.ajax({
            type: 'GET',
            url: `/getCategories?search=${search}`,
            contentType: 'json',
            success: function (data) {
                const grid = document.getElementById("categories").ej2_instances[0];
                grid.dataSource = data;
                grid.refresh();
            }
        });
    }
    
</script>
 

<script src="https://code.jquery.com/jquery-3.6.0.min.js"> </script>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"> </script>

<script>
    // Function to load the categories and refresh the grid
    function loadCategories() {
        $.ajax({
            type: 'GET',
            url: '/getCategories', 
            contentType: 'json',
            success: function (data) {
                const grid = document.getElementById("categories").ej2_instances[0];
                grid.dataSource = data;
                grid.refresh();
            },            
        });
    }
</script>

<!-- modol for succces operation -->
<div id="successModal" class="succes-modal">
    <div class="succes-modal-content">
       
        <div class="success-icon">
            &#10004;
        </div>
        <h2>Success</h2>
        <p>Your data has been successfully submitted!</p>
        <button class="succes-btn" id="okBtn">OK</button>
    </div>
</div>

<script>
    //  input elements
    const modal = document.getElementById('successModal');
    const submitBtn = document.querySelectorAll('#submitBtn');
    const okBtn = document.querySelector('#okBtn');

    // Method for open success modal
    submitBtn.forEach((btn) => {
        btn.addEventListener('click', () => {
            modal.style.display = 'block';

            setTimeout(() => {
                modal.style.display = 'none'
            }, 3000)
        })

    })
    
    okBtn.addEventListener('click', () => {
        modal.style.display = 'none';
    })
  
    window.onclick = function (event) {
        if (event.target === modal) {
            modal.style.display = 'none';
        }
    }
</script>







